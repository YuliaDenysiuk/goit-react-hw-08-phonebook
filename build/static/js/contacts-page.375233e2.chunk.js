(this["webpackJsonpgoit-react-hw-08-phonebook"]=this["webpackJsonpgoit-react-hw-08-phonebook"]||[]).push([[0],{107:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var a=n(34);function r(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t)){var n=[],a=!0,r=!1,c=void 0;try{for(var o,i=t[Symbol.iterator]();!(a=(o=i.next()).done)&&(n.push(o.value),!e||n.length!==e);a=!0);}catch(s){r=!0,c=s}finally{try{a||null==i.return||i.return()}finally{if(r)throw c}}return n}}(t,e)||Object(a.a)(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},111:function(t,e,n){t.exports={form:"ContactForm_form__3YIws",form__input:"ContactForm_form__input__19paF",form__label:"ContactForm_form__label__-u65x",form__button:"ContactForm_form__button__2UTTz"}},112:function(t,e,n){t.exports={contacts:"ContactList_contacts__1-BVs",contacts__item:"ContactList_contacts__item__DMaps",contacts__button:"ContactList_contacts__button__3rMqi"}},113:function(t,e,n){t.exports={filter:"Filter_filter__1KN6o",filter__input:"Filter_filter__input__2IG7J"}},117:function(t,e,n){"use strict";n.r(e);var a=n(4),r=n(20),c=n(107),o=n(0),i=n(6),s=n(35),u=n(111),l=n.n(u),b=n(1),_={name:"",number:""};var f=function(){var t=Object(o.useState)(_),e=Object(c.a)(t,2),n=e[0],u=e[1],f=Object(i.b)(),m=function(t){var e=t.target,c=e.name,o=e.value;u(Object(r.a)(Object(r.a)({},n),{},Object(a.a)({},c,o)))},j=function(){u(_)};return Object(b.jsxs)("form",{onSubmit:function(t){t.preventDefault(),f(s.b.addContact(n)),j()},className:l.a.form,children:[Object(b.jsxs)("label",{className:l.a.form__label,children:["Name",Object(b.jsx)("input",{type:"text",className:l.a.form__input,name:"name",value:n.name,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"\u0418\u043c\u044f \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0431\u0443\u043a\u0432, \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\u0430, \u0442\u0438\u0440\u0435 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \u0438 \u0442. \u043f.",required:!0,onChange:m})]}),Object(b.jsxs)("label",{className:l.a.form__label,children:["Phone",Object(b.jsx)("input",{type:"tel",className:l.a.form__input,name:"number",value:n.number,pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0446\u0438\u0444\u0440 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0442\u0438\u0440\u0435, \u043a\u0440\u0443\u0433\u043b\u044b\u0435 \u0441\u043a\u043e\u0431\u043a\u0438 \u0438 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 +",required:!0,onChange:m})]}),Object(b.jsx)("button",{type:"submit",className:l.a.form__button,children:"Add contact"})]})},m=n(112),j=n.n(m),d=n(31);var h=function(){var t=Object(i.c)(s.d.isLoading),e=Object(i.c)((function(t){var e=t.contacts;return function(t,e){var n=e.toLowerCase();return t.filter((function(t){return t.name.toLowerCase().includes(n)}))}(e.items,e.filter)})),n=Object(i.b)();return Object(o.useEffect)((function(){n(s.b.fetchContacts())}),[n]),Object(b.jsxs)(b.Fragment,{children:[t&&Object(b.jsx)(d.a,{}),Object(b.jsx)("ul",{className:j.a.contacts,children:e.map((function(t){var e=t.id,a=t.name,r=t.number;return Object(b.jsxs)("li",{className:j.a.contacts__item,children:[a,": ",r,Object(b.jsx)("button",{type:"button",className:j.a.contacts__button,onClick:function(){return function(t){return n(s.b.deleteContact(t))}(e)},children:"Delete"})]},e)}))})]})},p=n(113),O=n.n(p);var x=function(){var t=Object(i.c)(s.d.getFilter),e=Object(i.b)();return Object(b.jsxs)(b.Fragment,{children:[Object(b.jsx)("p",{className:O.a.filter,children:"Find contacts by name"}),Object(b.jsx)("input",{type:"text",className:O.a.filter__input,value:t,pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"\u0418\u043c\u044f \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0431\u0443\u043a\u0432, \u0430\u043f\u043e\u0441\u0442\u0440\u043e\u0444\u0430, \u0442\u0438\u0440\u0435 \u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \u0438 \u0442. \u043f.",onChange:function(t){return e(s.a.filterContacts(t.target.value))}})]})};e.default=function(){return Object(b.jsxs)("div",{children:[Object(b.jsx)("h1",{children:"Phonebook"}),Object(b.jsx)(f,{}),Object(b.jsx)("h2",{children:"Contacts"}),Object(b.jsx)(x,{}),Object(b.jsx)(h,{})]})}}}]);
//# sourceMappingURL=contacts-page.375233e2.chunk.js.map