{"version":3,"sources":["components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/PublicRoute/PublicRoute.js","components/PrivateRoute/PrivateRoute.js","App.js","redux/store.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/Loader/Loader.js","components/UserMenu/UserMenu.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","components/AppBar/AppBar.module.css","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/auth/auth-selectors.js"],"names":["Navigation","isLoggedIn","useSelector","authSelectors","exact","to","className","s","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","name","getUserName","user","user__button","type","onClick","authOperations","logOut","AppBar","header","PublicRoute","children","redirectTo","restricted","routeProps","shouldRedirect","PrivateRoute","HomeView","lazy","RegisterView","LoginView","ContactsView","App","isRefreshing","useEffect","fetchCurrentUser","Loader","fallback","path","persistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","PendingLoader","color","height","width","getContacts","state","items","getFilter","filter","isLoading","filterContacts","createAction","fetchContacts","createAsyncThunk","_","a","rejectWithValue","axios","get","data","addContact","number","getState","contact","find","el","alert","post","deleteContact","id","delete","createReducer","fulfilled","action","payload","pending","rejected","combineReducers","defaults","baseURL","token","headers","common","Authorization","register","logIn","currentToken","authSlice","createSlice","initialState","email","extraReducers"],"mappings":"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","file":"static/js/main.3033239f.chunk.js","sourcesContent":["import s from './Navigation.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nfunction Navigation() {    \r\n    const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n\r\n    return (<nav>\r\n        <NavLink \r\n            exact\r\n            to=\"/\" \r\n            className={s.link} \r\n            activeClassName={s.activeLink}>\r\n            General\r\n        </NavLink>\r\n        {isLoggedIn && (\r\n            <NavLink\r\n                to=\"/contacts\" \r\n                className={s.link} \r\n                activeClassName={s.activeLink}>\r\n                Contacts\r\n            </NavLink>\r\n        )}\r\n    </nav>)\r\n}\r\n\r\nexport default Navigation;","import s from './AuthNav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction AuthNav() {\r\n    return (<nav>\r\n        <NavLink \r\n            exact\r\n            to=\"/register\" \r\n            className={s.link} \r\n            activeClassName={s.activeLink}>\r\n            Registration\r\n        </NavLink>\r\n        <NavLink \r\n            to=\"/login\" \r\n            className={s.link} \r\n            activeClassName={s.activeLink}>\r\n            Login\r\n        </NavLink>\r\n    </nav>)\r\n}\r\n\r\nexport default AuthNav;","import { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { authOperations, authSelectors } from 'redux/auth';\r\nimport s from './UserMenu.module.css';\r\n\r\nfunction UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  const submitHandler = () => {\r\n    dispatch(authOperations.logOut());\r\n  }\r\n\r\n    return (\r\n    <div>\r\n      <span className={s.user}>Welcome, {name} </span>\r\n      <button className={s.user__button} type=\"button\" onClick={submitHandler}>Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserMenu.propTypes = {\r\n  logOut: PropTypes.func,\r\n};\r\n\r\nexport default UserMenu;","import s from './AppBar.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {Navigation} from 'components/Navigation';\r\nimport {AuthNav} from 'components/AuthNav';\r\nimport { UserMenu } from 'components/UserMenu';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nfunction AppBar() {\r\n    const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n    \r\n    return (\r\n        <header className={s.header}> \r\n            <Navigation />           \r\n            {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    )\r\n}\r\n\r\nAppBar.propTypes = {\r\n    isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nexport default AppBar;","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nfunction PublicRoute({ children, redirectTo = '/', restricted = false, ...routeProps }) {\r\n    const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to={redirectTo} /> : children }\r\n        </Route>);\r\n}\r\n\r\nexport default PublicRoute;","import { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nfunction PrivateRoute({ children, redirectTo = '/', ...routeProps }) {\r\n    const isLoggedIn = useSelector(authSelectors.isLoggedIn);\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>);\r\n}\r\n\r\nexport default PrivateRoute;","import 'App.css';\nimport { Switch } from 'react-router-dom';\nimport {lazy, Suspense} from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {AppBar} from 'components/AppBar';\nimport { Loader } from 'components/Loader';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport { PublicRoute } from './components/PublicRoute';\nimport { PrivateRoute } from './components/PrivateRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView/HomeView.js' /* webpackChunkName: \"home-page\" */));\nconst RegisterView = lazy(() => import('./views/RegisterView/RegisterView.js' /* webpackChunkName: \"register-page\" */));\nconst LoginView = lazy(() => import('./views/LoginView/LoginView.js' /* webpackChunkName: \"login-page\" */));\nconst ContactsView = lazy(() => import('./views/ContactsView/ContactsView.js' /* webpackChunkName: \"contacts-page\" */));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isRefreshing = useSelector(authSelectors.isRefreshing);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (   \n    <>\n      {isRefreshing ? (<Loader />) : (\n        <>\n          <AppBar />     \n      \n          <Switch>\n            <Suspense fallback={<Loader />}>\n              <PublicRoute path='/' exact>\n                <HomeView />      \n              </PublicRoute>\n              \n              <PublicRoute path='/register' restricted>\n                <RegisterView />      \n              </PublicRoute>\n\n              <PublicRoute path='/login' redirectTo = '/contacts' restricted>\n                <LoginView />      \n              </PublicRoute>\n\n              <PrivateRoute path='/contacts' redirectTo = '/login'>\n                <ContactsView />      \n              </PrivateRoute>       \n            </Suspense>\n          </Switch>\n        </>\n      )}            \n    </>\n  );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport {contactsReducer} from './contacts';\n\nconst persistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n};\n\nconst store = configureStore({\n  reducer: {\n      auth: persistReducer(persistConfig, authReducer),\n      contacts: contactsReducer,\n    },\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }).concat(logger),\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'index.css';\nimport App from 'App';\nimport { store, persistor } from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>  \n      <PersistGate loading={null} persistor={persistor}>        \n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__pbxkr\",\"activeLink\":\"Navigation_activeLink__1sn4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2YX5M\",\"activeLink\":\"AuthNav_activeLink__3HCIc\"};","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nfunction PendingLoader() {\n    return <Loader\n        type=\"ThreeDots\"\n        color=\"rgb(16, 165, 23)\"\n        height={80}\n        width={80}      \n    />;    \n}\n\nexport default PendingLoader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserMenu_user__2y4xX\",\"user__button\":\"UserMenu_user__button__28T_C\"};","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const isLoading = state => state.contacts.loading;","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContacts = createAction('contacts/filter');","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetch',\n    async (_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get('/contacts');\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/add',\n    async ({ name, number }, { getState, rejectWithValue }) => {\n        try {\n            const contact = {\n                name,\n                number,\n            };\n            const state = getState();\n            const currentsContacts = state.contacts.items;\n\n            if (currentsContacts.find(el => el.name === name)) {\n                alert(`${name} is already in contacts`);\n                return rejectWithValue();\n            }\n\n            const { data } = await axios.post('/contacts', contact);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/delete',\n    async (id, { rejectWithValue }) => {\n        try {\n            await axios.delete(`/contacts/${id}`);\n            return id;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n","import {combineReducers} from 'redux';\nimport {createReducer} from '@reduxjs/toolkit';\nimport { filterContacts } from './contacts-actions';\nimport { fetchContacts, addContact, deleteContact } from './contacts-operations';\n\nconst items = createReducer([], {\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\n    [addContact.fulfilled]: (state, action) => [action.payload, ...state],\n    [deleteContact.fulfilled]: (state, action) => state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n    [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {    \n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => false,\n    [fetchContacts.rejected]: () => false,\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3-wai\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register',\r\n    async (user, { rejectWithValue }) => {\r\n        try {           \r\n            const { data } = await axios.post('/users/signup', user);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const logIn = createAsyncThunk('auth/login',\r\n    async (user, { rejectWithValue }) => {\r\n        try {           \r\n            const { data } = await axios.post('/users/login', user);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        } \r\n    },\r\n);\r\n\r\nexport const logOut = createAsyncThunk('auth/logout',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            await axios.post('/users/logout');\r\n            token.unset();\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk('auth/refresh',\r\n    async (_, { getState, rejectWithValue }) => {\r\n        const state = getState();\r\n        const currentToken = state.auth.token;\r\n\r\n        if (currentToken === null) {\r\n            return rejectWithValue();\r\n        }\r\n\r\n        token.set(currentToken);\r\n\r\n        try {\r\n            const {data} = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport {register, logIn, logOut, fetchCurrentUser} from '../../redux/auth/auth-operations';\r\n\r\nconst initialState = {\r\n    user: {name: null, email: null},\r\n    token: null,\r\n    isLoggedIn: false,\r\n    isRefreshing: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [logOut.fulfilled](state, action) {\r\n            state.user = { name: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [fetchCurrentUser.pending](state, action) {\r\n            state.isRefreshing = true;\r\n        },\r\n        [fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n            state.isRefreshing = false;\r\n        },\r\n        [fetchCurrentUser.rejected](state, action) {\r\n            state.isRefreshing = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","export const isLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const isRefreshing = state => state.auth.isRefreshing;"],"sourceRoot":""}