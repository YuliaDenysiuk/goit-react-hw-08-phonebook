{"version":3,"sources":["components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","redux/auth/auth-slice.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/AppBar/AppBar.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","components/ContactForm/ContactForm.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js","views/RegisterView/RegisterView.js","views/LoginView/LoginView.js","App.js","redux/store.js","index.js","views/RegisterView/RegisterView.module.css","components/AuthNav/AuthNav.module.css","components/ContactForm/ContactForm.module.css","views/LoginView/LoginView.module.css","components/ContactList/ContactList.module.css","components/UserMenu/UserMenu.module.css","components/Filter/Filter.module.css","components/AppBar/AppBar.module.css"],"names":["AuthNav","exact","to","className","s","link","activeClassName","activeLink","UserMenu","user","user__button","type","authSlice","createSlice","name","initialState","email","password","token","isLoggedIn","extraReducers","authOperations","register","fulfilled","state","action","payload","logIn","axios","defaults","baseURL","createAsyncThunk","a","rejectWithValue","post","data","auth","AppBar","header","authSelectors","getContacts","contacts","items","getFilter","filter","isLoading","loading","filterContacts","createAction","fetchContacts","_","get","addContact","phone","contact","deleteContact","id","delete","createReducer","find","el","alert","pending","rejected","combineReducers","INITIAL_STATE","ContactForm","useState","setContact","dispatch","useDispatch","handleChange","target","value","reset","onSubmit","e","preventDefault","contactsOperations","form","form__label","form__input","pattern","title","required","onChange","form__button","PendingLoader","color","height","width","ContactList","useSelector","contactsSelectors","normalizedFilter","toLowerCase","includes","getFilteredContacts","useEffect","Loader","length","map","contacts__item","contacts__button","onClick","onDeleteContact","Filter","filter__input","contactsActions","ContactsView","RegisterView","setUser","autoComplete","LoginView","App","path","persistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.708c0cf8.chunk.js","sourcesContent":["import s from './AuthNav.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction AuthNav() {\r\n    return (<nav>\r\n        <NavLink \r\n            exact\r\n            to=\"/register\" \r\n            className={s.link} \r\n            activeClassName={s.activeLink}>\r\n            Registration\r\n        </NavLink>\r\n        <NavLink \r\n            to=\"/login\" \r\n            className={s.link} \r\n            activeClassName={s.activeLink}>\r\n            Login\r\n        </NavLink>\r\n        <NavLink \r\n            to=\"/contacts\" \r\n            className={s.link} \r\n            activeClassName={s.activeLink}>\r\n            Contacts\r\n        </NavLink>\r\n    </nav>)\r\n}\r\n\r\nexport default AuthNav;","import s from './UserMenu.module.css';\r\n\r\nfunction UserMenu() {\r\n    return (\r\n    <div>\r\n      <span className={s.user}>Welcome, </span>\r\n      <button className={s.user__button} type=\"button\">Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserMenu;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { authOperations } from 'redux/auth';\r\n\r\nconst initialState = {\r\n    user: {name: null, email: null, password: null},\r\n    token: null,\r\n    isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [authOperations.register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [authOperations.logIn.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const register = createAsyncThunk('auth/register',\r\n    async (user, { rejectWithValue }) => {\r\n        try {           \r\n            const { data } = await axios.post('/users/signup', user);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n    },\r\n);\r\n\r\nexport const logIn = createAsyncThunk('auth/login',\r\n    async (user, { rejectWithValue }) => {\r\n        try {           \r\n            const { data } = await axios.post('/users/login', user);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        } \r\n    },\r\n);\r\n\r\n","export const isLoggedIn = state => state.auth.isLoggedIn;","import s from './AppBar.module.css';\r\nimport {AuthNav} from 'components/AuthNav';\r\nimport { UserMenu } from 'components/UserMenu';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nfunction AppBar() {\r\n    return (\r\n        <header className={s.header}>\r\n            {authSelectors.isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppBar;","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const isLoading = state => state.contacts.loading;","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContacts = createAction('contacts/filter');","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// axios.defaults.baseURL = 'https://61a24087014e1900176de8a4.mockapi.io';\n\nexport const fetchContacts = createAsyncThunk(\n    'contacts/fetch',\n    async (_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get('/contacts');\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'contacts/add',\n    async ({ name, phone }, { rejectWithValue }) => {\n        try {\n            const contact = {\n                name,\n                phone,\n            };\n            const { data } = await axios.post('/contacts', contact);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contacts/delete',\n    async (id, { rejectWithValue }) => {\n        try {\n            await axios.delete(`/contacts/${id}`);\n            return id;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n","import {combineReducers} from 'redux';\nimport {createReducer} from '@reduxjs/toolkit';\nimport { filterContacts } from './contacts-actions';\nimport { fetchContacts, addContact, deleteContact } from './contacts-operations';\n\nconst items = createReducer([], {\n    [fetchContacts.fulfilled]: (_, {payload}) => payload,\n    [addContact.fulfilled]: (state, { payload }) => {\n        if (state.find(el => el.name === payload.name)) {\n            alert(`${payload.name} is already in contacts`)\n            return;\n        } else {\n            return [payload, ...state];\n        }\n    },\n    [deleteContact.fulfilled]: (state, {payload}) => state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n    [filterContacts]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {    \n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => false,\n    [fetchContacts.rejected]: () => false,\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n});\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {contactsOperations} from 'redux/contacts';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nfunction ContactForm() {\n  const [contact, setContact] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setContact({\n      ...contact,\n      [name]: value\n    })\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(contactsOperations.addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setContact(INITIAL_STATE);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.form__label}>\n        Name\n        <input\n          type=\"text\"\n          className={s.form__input}\n          name=\"name\"\n          value={contact.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.form__label}>\n        Phone\n        <input\n          type=\"tel\"\n          className={s.form__input}\n          name=\"phone\"\n          value={contact.phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.form__button}>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  target: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactForm;\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nfunction PendingLoader() {\n    return <Loader\n        type=\"ThreeDots\"\n        color=\"#1b7bc9\"\n        height={80}\n        width={80}      \n    />;    \n}\n\nexport default PendingLoader;","import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {contactsSelectors, contactsOperations} from 'redux/contacts';\nimport s from './ContactList.module.css';\nimport { Loader } from 'components/Loader';\n\nconst getFilteredContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nfunction ContactList() {\n  const isLoading = useSelector(contactsSelectors.isLoading);\n  const contacts = useSelector(({contacts: {items, filter}}) => getFilteredContacts(items, filter));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => (dispatch(contactsOperations.deleteContact(id)));\n\n  return (\n  <>\n    {isLoading && <Loader />}\n    <ul className={s.contacts}>      \n      {(contacts.length > 1) && (\n        contacts.map(({ id, name, phone }) => (\n        <li key={id} className={s.contacts__item}>\n          {name}: {phone}\n          <button type=\"button\" className={s.contacts__button} onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>))\n      )}\n    </ul>\n  </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {contactsSelectors, contactsActions} from 'redux/contacts';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const value = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => dispatch(contactsActions.filterContacts(e.target.value));\n\n  return (\n    <>\n      <p className={s.filter}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        className={s.filter__input}\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={onFilterChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import {ContactForm} from 'components/ContactForm';\r\nimport {ContactList} from 'components/ContactList';\r\nimport { Filter } from 'components/Filter';\r\n\r\nfunction ContactsView() {\r\n  return (   \r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsView;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {authOperations} from 'redux/auth';\r\nimport s from './RegisterView.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nfunction RegisterView() {\r\n    const [user, setUser] = useState(INITIAL_STATE);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.register(user));\r\n        reset();\r\n\r\n    };\r\n\r\n    const reset = () => {\r\n        setUser(INITIAL_STATE);\r\n    };\r\n\r\n    return (        \r\n        <form className={s.form} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <label className={s.form__label}>Name\r\n                <input\r\n                    className={s.form__input}\r\n                    type='text'\r\n                    name='name'\r\n                    value={user.name}\r\n                    required\r\n                    onChange={handleChange}>\r\n                </input>\r\n            </label>\r\n            <label className={s.form__label}>Email\r\n                <input\r\n                    className={s.form__input}\r\n                    type='email'\r\n                    name='email'\r\n                    value={user.email}\r\n                    required\r\n                    onChange={handleChange}>                    \r\n                </input>\r\n            </label>\r\n            <label className={s.form__label}>Password\r\n                <input\r\n                    className={s.form__input}\r\n                    type='password'\r\n                    name='password'\r\n                    value={user.password}\r\n                    required\r\n                    onChange={handleChange}>                    \r\n                </input>\r\n            </label>\r\n            <button className={s.form__button} type=\"submit\">Register</button>\r\n        </form>        \r\n    );\r\n}\r\n\r\nexport default RegisterView;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {authOperations} from 'redux/auth';\r\nimport s from './LoginView.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nfunction LoginView() {\r\n    const [user, setUser] = useState(INITIAL_STATE);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.logIn(user));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setUser(INITIAL_STATE);\r\n    };\r\n\r\n    return (\r\n        <form className={s.form} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n            <label className={s.form__label}>Email\r\n                <input\r\n                    className={s.form__input}\r\n                    type='email'\r\n                    name='email'\r\n                    value={user.email}\r\n                    required\r\n                    onChange={handleChange}>\r\n                </input>\r\n            </label>\r\n            <label className={s.form__label}>Password\r\n                <input\r\n                    className={s.form__input}\r\n                    type='password'\r\n                    name='password'\r\n                    value={user.password}\r\n                    required\r\n                    onChange={handleChange}>                    \r\n                </input>\r\n            </label>\r\n            <button className={s.form__button} type=\"submit\">LogIn</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginView;","import 'App.css';\nimport {Switch, Route} from 'react-router-dom';\nimport {AppBar} from 'components/AppBar';\nimport {RegisterView, LoginView, ContactsView} from 'views';\n\nfunction App() {\n  return (   \n    <>\n      <AppBar />      \n\n      <Switch>\n        <Route path='/register'>\n          <RegisterView />      \n        </Route>\n\n        <Route path='/login'>\n          <LoginView />      \n        </Route>\n\n        <Route path='/contacts'>\n          <ContactsView />      \n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport {contactsReducer} from './contacts';\n\nconst persistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n};\n\nconst store = configureStore({\n  reducer: {\n      auth: persistReducer(persistConfig, authReducer),\n      contacts: contactsReducer,\n    },\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }).concat(logger),\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport {store, persistor};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'index.css';\nimport App from 'App';\nimport { store, persistor } from 'redux/store';\nimport { Loader } from 'components/Loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>  \n      <PersistGate loading={<Loader />} persistor={persistor}>        \n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__19Njf\",\"form__input\":\"RegisterView_form__input__3OQoq\",\"form__label\":\"RegisterView_form__label__3wTAO\",\"form__button\":\"RegisterView_form__button__3Pu4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2YX5M\",\"activeLink\":\"AuthNav_activeLink__3HCIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3YIws\",\"form__input\":\"ContactForm_form__input__19paF\",\"form__label\":\"ContactForm_form__label__-u65x\",\"form__button\":\"ContactForm_form__button__2UTTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__fLz6y\",\"form__input\":\"LoginView_form__input__27JBe\",\"form__label\":\"LoginView_form__label__39Un9\",\"form__button\":\"LoginView_form__button__1Nrq-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1-BVs\",\"contacts__item\":\"ContactList_contacts__item__DMaps\",\"contacts__button\":\"ContactList_contacts__button__3rMqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserMenu_user__2y4xX\",\"user__button\":\"UserMenu_user__button__28T_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1KN6o\",\"filter__input\":\"Filter_filter__input__2IG7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3-wai\"};"],"sourceRoot":""}