{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView/LoginView.module.css","views/LoginView/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","INITIAL_STATE","email","password","LoginView","useState","user","setUser","dispatch","useDispatch","handleChange","target","name","reset","className","s","form","onSubmit","e","preventDefault","authOperations","logIn","form__label","form__input","type","required","autoComplete","onChange","form__button"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,+BAA+B,YAAc,+BAA+B,aAAe,kC,kHCKpJC,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA6DGC,UA1Df,WACI,MAAwBC,mBAASJ,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACMC,EAAWC,cAEXC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBC,EAAgBD,EAAhBC,KAAMlB,EAAUiB,EAAVjB,MACVa,EAAQ,2BACDD,GADA,kBAEFM,EAAOlB,MAUVmB,EAAQ,WACVN,EAAQN,IAGZ,OACI,uBAAMa,UAAWC,IAAEC,KAAMC,SAXR,SAAAC,GACjBA,EAAEC,iBACFX,EAASY,IAAeC,MAAMf,IAC9BO,KAQA,UACI,wBAAOC,UAAWC,IAAEO,YAApB,kBACI,uBACIR,UAAWC,IAAEQ,YACbC,KAAK,QACLZ,KAAK,QACLlB,MAAOY,EAAKJ,MACZuB,UAAQ,EACRC,aAAa,WACbC,SAAUjB,OAGlB,wBAAOI,UAAWC,IAAEO,YAApB,qBACI,uBACIR,UAAWC,IAAEQ,YACbC,KAAK,WACLZ,KAAK,WACLlB,MAAOY,EAAKH,SACZsB,UAAQ,EACRC,aAAa,mBACbC,SAAUjB,OAGlB,wBAAQI,UAAWC,IAAEa,aAAcJ,KAAK,SAAxC","file":"static/js/login-page.ad587197.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginView_form__fLz6y\",\"form__input\":\"LoginView_form__input__27JBe\",\"form__label\":\"LoginView_form__label__39Un9\",\"form__button\":\"LoginView_form__button__1Nrq-\"};","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {authOperations} from 'redux/auth';\r\nimport s from './LoginView.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nfunction LoginView() {\r\n    const [user, setUser] = useState(INITIAL_STATE);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.logIn(user));\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setUser(INITIAL_STATE);\r\n    };\r\n\r\n    return (\r\n        <form className={s.form} onSubmit={handleSubmit}>\r\n            <label className={s.form__label}>Email\r\n                <input\r\n                    className={s.form__input}\r\n                    type='email'\r\n                    name='email'\r\n                    value={user.email}\r\n                    required\r\n                    autoComplete=\"username\"\r\n                    onChange={handleChange}>\r\n                </input>\r\n            </label>\r\n            <label className={s.form__label}>Password\r\n                <input\r\n                    className={s.form__input}\r\n                    type='password'\r\n                    name='password'\r\n                    value={user.password}\r\n                    required\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange}>                    \r\n                </input>\r\n            </label>\r\n            <button className={s.form__button} type=\"submit\">LogIn</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nLoginView.propTypes = {\r\n    user: PropTypes.shape({\r\n        email: PropTypes.string.isRequired,\r\n        password: PropTypes.string.isRequired,\r\n    }),\r\n};\r\n\r\nexport default LoginView;"],"sourceRoot":""}